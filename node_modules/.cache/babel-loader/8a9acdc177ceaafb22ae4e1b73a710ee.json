{"ast":null,"code":"import _asyncToGenerator from\"/home/elice/react-portfolio-share-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/elice/react-portfolio-share-app/node_modules/@babel/runtime/regenerator/index.js\";import axios from\"axios\";var backendPortNumber=\"5001\";var serverUrl=\"http://\"+window.location.hostname+\":\"+backendPortNumber+\"/\";function get(_x){return _get.apply(this,arguments);}function _get(){_get=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoint){var params,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=_args.length>1&&_args[1]!==undefined?_args[1]:\"\";console.log(\"%cGET \\uC694\\uCCAD \".concat(serverUrl+endpoint+\"/\"+params),\"color: #a25cd1;\");return _context.abrupt(\"return\",axios.get(serverUrl+endpoint+\"/\"+params,{// JWT 토큰을 헤더에 담아 백엔드 서버에 보냄.\nheaders:{Authorization:\"Bearer \".concat(sessionStorage.getItem(\"userToken\"))}}));case 3:case\"end\":return _context.stop();}}},_callee);}));return _get.apply(this,arguments);}function post(_x2,_x3){return _post.apply(this,arguments);}function _post(){_post=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(endpoint,data){var bodyData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// JSON.stringify 함수: Javascript 객체를 JSON 형태로 변환함.\n// 예시: {name: \"Kim\"} => {\"name\": \"Kim\"}\nbodyData=JSON.stringify(data);console.log(\"%cPOST \\uC694\\uCCAD: \".concat(serverUrl+endpoint),\"color: #296aba;\");console.log(\"%cPOST \\uC694\\uCCAD \\uB370\\uC774\\uD130: \".concat(bodyData),\"color: #296aba;\");return _context2.abrupt(\"return\",axios.post(serverUrl+endpoint,bodyData,{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(sessionStorage.getItem(\"userToken\"))}}));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _post.apply(this,arguments);}function put(_x4,_x5){return _put.apply(this,arguments);}// 아래 함수명에 관해, delete 단어는 자바스크립트의 reserved 단어이기에,\n// 여기서는 우선 delete 대신 del로 쓰고 아래 export 시에 delete로 alias 함.\nfunction _put(){_put=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(endpoint,data){var bodyData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:// JSON.stringify 함수: Javascript 객체를 JSON 형태로 변환함.\n// 예시: {name: \"Kim\"} => {\"name\": \"Kim\"}\nbodyData=JSON.stringify(data);console.log(\"%cPUT \\uC694\\uCCAD: \".concat(serverUrl+endpoint),\"color: #059c4b;\");console.log(\"%cPUT \\uC694\\uCCAD \\uB370\\uC774\\uD130: \".concat(bodyData),\"color: #059c4b;\");return _context3.abrupt(\"return\",axios.put(serverUrl+endpoint,bodyData,{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(sessionStorage.getItem(\"userToken\"))}}));case 4:case\"end\":return _context3.stop();}}},_callee3);}));return _put.apply(this,arguments);}function del(_x6){return _del.apply(this,arguments);}// 아래처럼 export한 후, import * as A 방식으로 가져오면,\n// A.get, A.post 로 쓸 수 있음.\nfunction _del(){_del=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(endpoint){var params,_args4=arguments;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:params=_args4.length>1&&_args4[1]!==undefined?_args4[1]:\"\";console.log(\"DELETE \\uC694\\uCCAD \".concat(serverUrl+endpoint+\"/\"+params));return _context4.abrupt(\"return\",axios.delete(serverUrl+endpoint+\"/\"+params,{headers:{Authorization:\"Bearer \".concat(sessionStorage.getItem(\"userToken\"))}}));case 3:case\"end\":return _context4.stop();}}},_callee4);}));return _del.apply(this,arguments);}export{get,post,put,del as delete};","map":{"version":3,"sources":["/home/elice/react-portfolio-share-app/src/api.js"],"names":["axios","backendPortNumber","serverUrl","window","location","hostname","get","endpoint","params","console","log","headers","Authorization","sessionStorage","getItem","post","data","bodyData","JSON","stringify","put","del","delete"],"mappings":"yPAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,MAA1B,CACA,GAAMC,CAAAA,SAAS,CACb,UAAYC,MAAM,CAACC,QAAP,CAAgBC,QAA5B,CAAuC,GAAvC,CAA6CJ,iBAA7C,CAAiE,GADnE,C,QAGeK,CAAAA,G,qHAAf,iBAAmBC,QAAnB,6IAA6BC,MAA7B,+CAAsC,EAAtC,CACEC,OAAO,CAACC,GAAR,8BACcR,SAAS,CAAGK,QAAZ,CAAuB,GAAvB,CAA6BC,MAD3C,EAEE,iBAFF,EADF,gCAMSR,KAAK,CAACM,GAAN,CAAUJ,SAAS,CAAGK,QAAZ,CAAuB,GAAvB,CAA6BC,MAAvC,CAA+C,CACpD;AACAG,OAAO,CAAE,CACPC,aAAa,kBAAYC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAZ,CADN,CAF2C,CAA/C,CANT,wD,8CAceC,CAAAA,I,6HAAf,kBAAoBR,QAApB,CAA8BS,IAA9B,mIACE;AACA;AACMC,QAHR,CAGmBC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAHnB,CAIEP,OAAO,CAACC,GAAR,gCAA0BR,SAAS,CAAGK,QAAtC,EAAkD,iBAAlD,EACAE,OAAO,CAACC,GAAR,mDAA8BO,QAA9B,EAA0C,iBAA1C,EALF,iCAOSjB,KAAK,CAACe,IAAN,CAAWb,SAAS,CAAGK,QAAvB,CAAiCU,QAAjC,CAA2C,CAChDN,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAZ,CAFN,CADuC,CAA3C,CAPT,0D,+CAeeM,CAAAA,G,6CAef;AACA;6EAhBA,kBAAmBb,QAAnB,CAA6BS,IAA7B,mIACE;AACA;AACMC,QAHR,CAGmBC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAHnB,CAIEP,OAAO,CAACC,GAAR,+BAAyBR,SAAS,CAAGK,QAArC,EAAiD,iBAAjD,EACAE,OAAO,CAACC,GAAR,kDAA6BO,QAA7B,EAAyC,iBAAzC,EALF,iCAOSjB,KAAK,CAACoB,GAAN,CAAUlB,SAAS,CAAGK,QAAtB,CAAgCU,QAAhC,CAA0C,CAC/CN,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAZ,CAFN,CADsC,CAA1C,CAPT,0D,8CAiBeO,CAAAA,G,yCASf;AACA;6EAVA,kBAAmBd,QAAnB,kJAA6BC,MAA7B,kDAAsC,EAAtC,CACEC,OAAO,CAACC,GAAR,+BAAyBR,SAAS,CAAGK,QAAZ,CAAuB,GAAvB,CAA6BC,MAAtD,GADF,iCAESR,KAAK,CAACsB,MAAN,CAAapB,SAAS,CAAGK,QAAZ,CAAuB,GAAvB,CAA6BC,MAA1C,CAAkD,CACvDG,OAAO,CAAE,CACPC,aAAa,kBAAYC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAZ,CADN,CAD8C,CAAlD,CAFT,0D,sCAWA,OAASR,GAAT,CAAcS,IAAd,CAAoBK,GAApB,CAAyBC,GAAG,GAAIC,CAAAA,MAAhC","sourcesContent":["import axios from \"axios\";\n\nconst backendPortNumber = \"5001\";\nconst serverUrl =\n  \"http://\" + window.location.hostname + \":\" + backendPortNumber + \"/\";\n\nasync function get(endpoint, params = \"\") {\n  console.log(\n    `%cGET 요청 ${serverUrl + endpoint + \"/\" + params}`,\n    \"color: #a25cd1;\"\n  );\n\n  return axios.get(serverUrl + endpoint + \"/\" + params, {\n    // JWT 토큰을 헤더에 담아 백엔드 서버에 보냄.\n    headers: {\n      Authorization: `Bearer ${sessionStorage.getItem(\"userToken\")}`,\n    },\n  });\n}\n\nasync function post(endpoint, data) {\n  // JSON.stringify 함수: Javascript 객체를 JSON 형태로 변환함.\n  // 예시: {name: \"Kim\"} => {\"name\": \"Kim\"}\n  const bodyData = JSON.stringify(data);\n  console.log(`%cPOST 요청: ${serverUrl + endpoint}`, \"color: #296aba;\");\n  console.log(`%cPOST 요청 데이터: ${bodyData}`, \"color: #296aba;\");\n\n  return axios.post(serverUrl + endpoint, bodyData, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${sessionStorage.getItem(\"userToken\")}`,\n    },\n  });\n}\n\nasync function put(endpoint, data) {\n  // JSON.stringify 함수: Javascript 객체를 JSON 형태로 변환함.\n  // 예시: {name: \"Kim\"} => {\"name\": \"Kim\"}\n  const bodyData = JSON.stringify(data);\n  console.log(`%cPUT 요청: ${serverUrl + endpoint}`, \"color: #059c4b;\");\n  console.log(`%cPUT 요청 데이터: ${bodyData}`, \"color: #059c4b;\");\n\n  return axios.put(serverUrl + endpoint, bodyData, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${sessionStorage.getItem(\"userToken\")}`,\n    },\n  });\n}\n\n// 아래 함수명에 관해, delete 단어는 자바스크립트의 reserved 단어이기에,\n// 여기서는 우선 delete 대신 del로 쓰고 아래 export 시에 delete로 alias 함.\nasync function del(endpoint, params = \"\") {\n  console.log(`DELETE 요청 ${serverUrl + endpoint + \"/\" + params}`);\n  return axios.delete(serverUrl + endpoint + \"/\" + params, {\n    headers: {\n      Authorization: `Bearer ${sessionStorage.getItem(\"userToken\")}`,\n    },\n  });\n}\n\n// 아래처럼 export한 후, import * as A 방식으로 가져오면,\n// A.get, A.post 로 쓸 수 있음.\nexport { get, post, put, del as delete };\n"]},"metadata":{},"sourceType":"module"}