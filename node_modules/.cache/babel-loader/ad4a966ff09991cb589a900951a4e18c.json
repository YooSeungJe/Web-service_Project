{"ast":null,"code":"import _slicedToArray from\"/home/elice/react-portfolio-share-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useContext,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{Container,Row}from\"react-bootstrap\";import*as Api from\"../../api\";import UserCard from\"./UserCard\";import{UserStateContext}from\"../../App\";import{jsx as _jsx}from\"react/jsx-runtime\";function Network(){var navigate=useNavigate();var userState=useContext(UserStateContext);// useState 훅을 통해 users 상태를 생성함.\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];useEffect(function(){// 만약 전역 상태의 user가 null이라면, 로그인 페이지로 이동함.\nif(!userState.user){navigate(\"/login\");return;}// \"userlist\" 엔드포인트로 GET 요청을 하고, users를 response의 data로 세팅함.\nApi.get(\"userlist\").then(function(res){return setUsers(res.data);});},[userState,navigate]);return/*#__PURE__*/_jsx(Container,{fluid:true,children:/*#__PURE__*/_jsx(Row,{xs:\"auto\",className:\"jusify-content-center\",children:users.map(function(user){return/*#__PURE__*/_jsx(UserCard,{user:user,isNetwork:true},user.id);})})});}export default Network;","map":{"version":3,"sources":["/home/elice/react-portfolio-share-app/src/components/user/Network.js"],"names":["React","useEffect","useContext","useState","useNavigate","Container","Row","Api","UserCard","UserStateContext","Network","navigate","userState","users","setUsers","user","get","then","res","data","map","id"],"mappings":"2HAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,UAA3B,CAAuCC,QAAvC,KAAuD,OAAvD,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,SAAT,CAAoBC,GAApB,KAA+B,iBAA/B,CAEA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,WAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,gBAAT,KAAiC,WAAjC,C,2CAEA,QAASC,CAAAA,OAAT,EAAmB,CACjB,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,SAAS,CAAGV,UAAU,CAACO,gBAAD,CAA5B,CACA;AACA,cAA0BN,QAAQ,CAAC,EAAD,CAAlC,wCAAOU,KAAP,eAAcC,QAAd,eAEAb,SAAS,CAAC,UAAM,CACd;AACA,GAAI,CAACW,SAAS,CAACG,IAAf,CAAqB,CACnBJ,QAAQ,CAAC,QAAD,CAAR,CACA,OACD,CACD;AACAJ,GAAG,CAACS,GAAJ,CAAQ,UAAR,EAAoBC,IAApB,CAAyB,SAACC,GAAD,QAASJ,CAAAA,QAAQ,CAACI,GAAG,CAACC,IAAL,CAAjB,EAAzB,EACD,CARQ,CAQN,CAACP,SAAD,CAAYD,QAAZ,CARM,CAAT,CAUA,mBACE,KAAC,SAAD,EAAW,KAAK,KAAhB,uBACE,KAAC,GAAD,EAAK,EAAE,CAAC,MAAR,CAAe,SAAS,CAAC,uBAAzB,UACGE,KAAK,CAACO,GAAN,CAAU,SAACL,IAAD,qBACT,KAAC,QAAD,EAAwB,IAAI,CAAEA,IAA9B,CAAoC,SAAS,KAA7C,EAAeA,IAAI,CAACM,EAApB,CADS,EAAV,CADH,EADF,EADF,CASD,CAED,cAAeX,CAAAA,OAAf","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, Row } from \"react-bootstrap\";\n\nimport * as Api from \"../../api\";\nimport UserCard from \"./UserCard\";\nimport { UserStateContext } from \"../../App\";\n\nfunction Network() {\n  const navigate = useNavigate();\n  const userState = useContext(UserStateContext);\n  // useState 훅을 통해 users 상태를 생성함.\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    // 만약 전역 상태의 user가 null이라면, 로그인 페이지로 이동함.\n    if (!userState.user) {\n      navigate(\"/login\");\n      return;\n    }\n    // \"userlist\" 엔드포인트로 GET 요청을 하고, users를 response의 data로 세팅함.\n    Api.get(\"userlist\").then((res) => setUsers(res.data));\n  }, [userState, navigate]);\n\n  return (\n    <Container fluid>\n      <Row xs=\"auto\" className=\"jusify-content-center\">\n        {users.map((user) => (\n          <UserCard key={user.id} user={user} isNetwork />\n        ))}\n      </Row>\n    </Container>\n  );\n}\n\nexport default Network;\n"]},"metadata":{},"sourceType":"module"}