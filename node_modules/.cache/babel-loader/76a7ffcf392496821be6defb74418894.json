{"ast":null,"code":"import _asyncToGenerator from\"/home/elice/react-portfolio-share-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/elice/react-portfolio-share-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/elice/react-portfolio-share-app/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState}from\"react\";import{Button,Form,Card,Col,Row}from\"react-bootstrap\";import*as Api from\"../../api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UserEditForm(_ref){var user=_ref.user,setIsEditing=_ref.setIsEditing,setUser=_ref.setUser;//useState로 name 상태를 생성함.\nvar _useState=useState(user.name),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];//useState로 email 상태를 생성함.\nvar _useState3=useState(user.email),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];//useState로 description 상태를 생성함.\nvar _useState5=useState(user.description),_useState6=_slicedToArray(_useState5,2),description=_useState6[0],setDescription=_useState6[1];var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var res,updatedUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();// \"users/유저id\" 엔드포인트로 PUT 요청함.\n_context.next=3;return Api.put(\"users/\".concat(user.id),{name:name,email:email,description:description});case 3:res=_context.sent;// 유저 정보는 response의 data임.\nupdatedUser=res.data;// 해당 유저 정보로 user을 세팅함.\nsetUser(updatedUser);// isEditing을 false로 세팅함.\nsetIsEditing(false);case 7:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Card,{className:\"mb-2\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(Form.Group,{controlId:\"useEditName\",className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"\\uC774\\uB984\",value:name,onChange:function onChange(e){return setName(e.target.value);}})}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"userEditEmail\",className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"\\uC774\\uBA54\\uC77C\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"userEditDescription\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"\\uC815\\uBCF4, \\uC778\\uC0AC\\uB9D0\",value:description,onChange:function onChange(e){return setDescription(e.target.value);}})}),/*#__PURE__*/_jsx(Form.Group,{as:Row,className:\"mt-3 text-center\",children:/*#__PURE__*/_jsxs(Col,{sm:{span:20},children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",className:\"me-3\",children:\"\\uD655\\uC778\"}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:function onClick(){return setIsEditing(false);},children:\"\\uCDE8\\uC18C\"})]})})]})})});}export default UserEditForm;","map":{"version":3,"sources":["/home/elice/react-portfolio-share-app/src/components/user/UserEditForm.js"],"names":["React","useState","Button","Form","Card","Col","Row","Api","UserEditForm","user","setIsEditing","setUser","name","setName","email","setEmail","description","setDescription","handleSubmit","e","preventDefault","put","id","res","updatedUser","data","target","value","span"],"mappings":"oXAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,IAAvB,CAA6BC,GAA7B,CAAkCC,GAAlC,KAA6C,iBAA7C,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,WAArB,C,wFAEA,QAASC,CAAAA,YAAT,MAAuD,IAA/BC,CAAAA,IAA+B,MAA/BA,IAA+B,CAAzBC,YAAyB,MAAzBA,YAAyB,CAAXC,OAAW,MAAXA,OAAW,CACrD;AACA,cAAwBV,QAAQ,CAACQ,IAAI,CAACG,IAAN,CAAhC,wCAAOA,IAAP,eAAaC,OAAb,eACA;AACA,eAA0BZ,QAAQ,CAACQ,IAAI,CAACK,KAAN,CAAlC,yCAAOA,KAAP,eAAcC,QAAd,eACA;AACA,eAAsCd,QAAQ,CAACQ,IAAI,CAACO,WAAN,CAA9C,yCAAOA,WAAP,eAAoBC,cAApB,eAEA,GAAMC,CAAAA,YAAY,2FAAG,iBAAOC,CAAP,sIACnBA,CAAC,CAACC,cAAF,GAEA;AAHmB,sBAIDb,CAAAA,GAAG,CAACc,GAAJ,iBAAiBZ,IAAI,CAACa,EAAtB,EAA4B,CAC5CV,IAAI,CAAJA,IAD4C,CAE5CE,KAAK,CAALA,KAF4C,CAG5CE,WAAW,CAAXA,WAH4C,CAA5B,CAJC,QAIbO,GAJa,eASnB;AACMC,WAVa,CAUCD,GAAG,CAACE,IAVL,CAWnB;AACAd,OAAO,CAACa,WAAD,CAAP,CAEA;AACAd,YAAY,CAAC,KAAD,CAAZ,CAfmB,sDAAH,kBAAZQ,CAAAA,YAAY,6CAAlB,CAkBA,mBACE,KAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,uBACE,KAAC,IAAD,CAAM,IAAN,wBACE,MAAC,IAAD,EAAM,QAAQ,CAAEA,YAAhB,wBACE,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,aAAtB,CAAoC,SAAS,CAAC,MAA9C,uBACE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,cAFd,CAGE,KAAK,CAAEN,IAHT,CAIE,QAAQ,CAAE,kBAACO,CAAD,QAAON,CAAAA,OAAO,CAACM,CAAC,CAACO,MAAF,CAASC,KAAV,CAAd,EAJZ,EADF,EADF,cAUE,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,eAAtB,CAAsC,SAAS,CAAC,MAAhD,uBACE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,OADP,CAEE,WAAW,CAAC,oBAFd,CAGE,KAAK,CAAEb,KAHT,CAIE,QAAQ,CAAE,kBAACK,CAAD,QAAOJ,CAAAA,QAAQ,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAAf,EAJZ,EADF,EAVF,cAmBE,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,qBAAtB,uBACE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,kCAFd,CAGE,KAAK,CAAEX,WAHT,CAIE,QAAQ,CAAE,kBAACG,CAAD,QAAOF,CAAAA,cAAc,CAACE,CAAC,CAACO,MAAF,CAASC,KAAV,CAArB,EAJZ,EADF,EAnBF,cA4BE,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAErB,GAAhB,CAAqB,SAAS,CAAC,kBAA/B,uBACE,MAAC,GAAD,EAAK,EAAE,CAAE,CAAEsB,IAAI,CAAE,EAAR,CAAT,wBACE,KAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,IAAI,CAAC,QAA/B,CAAwC,SAAS,CAAC,MAAlD,0BADF,cAIE,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAE,yBAAMlB,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAArC,0BAJF,GADF,EA5BF,GADF,EADF,EADF,CA6CD,CAED,cAAeF,CAAAA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Card, Col, Row } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\n\nfunction UserEditForm({ user, setIsEditing, setUser }) {\n  //useState로 name 상태를 생성함.\n  const [name, setName] = useState(user.name);\n  //useState로 email 상태를 생성함.\n  const [email, setEmail] = useState(user.email);\n  //useState로 description 상태를 생성함.\n  const [description, setDescription] = useState(user.description);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // \"users/유저id\" 엔드포인트로 PUT 요청함.\n    const res = await Api.put(`users/${user.id}`, {\n      name,\n      email,\n      description,\n    });\n    // 유저 정보는 response의 data임.\n    const updatedUser = res.data;\n    // 해당 유저 정보로 user을 세팅함.\n    setUser(updatedUser);\n\n    // isEditing을 false로 세팅함.\n    setIsEditing(false);\n  };\n\n  return (\n    <Card className=\"mb-2\">\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"useEditName\" className=\"mb-3\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"이름\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"userEditEmail\" className=\"mb-3\">\n            <Form.Control\n              type=\"email\"\n              placeholder=\"이메일\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"userEditDescription\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"정보, 인사말\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group as={Row} className=\"mt-3 text-center\">\n            <Col sm={{ span: 20 }}>\n              <Button variant=\"primary\" type=\"submit\" className=\"me-3\">\n                확인\n              </Button>\n              <Button variant=\"secondary\" onClick={() => setIsEditing(false)}>\n                취소\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default UserEditForm;\n"]},"metadata":{},"sourceType":"module"}